version: 2.1

parameters:
  kre-image-tag:
    type: string
    default: "9-latest"
  agent-download-link:
    type: string
    default: ""
  job-info:
    type: string
    default: ""
  agent-config:
    type: string
    default: ""
  server-url:
    type: string
    default: ""

orbs:
  slack: circleci/slack@4.12.6
  # katalon-studio: katalon/katalon-studio@23.0.12

slack_notify: &slack_notify
  slack/notify:
    event: fail
    template: basic_fail_1

setup_slack_mentions: &setup_slack_mentions
  run:
    name: setup $SLACK_PARAM_MENTIONS
    command: |
      echo "export SLACK_PARAM_MENTIONS='$(printenv "GH_USER_${CIRCLE_USERNAME//-/__DASH__}")'" >> "$BASH_ENV"

jobs:
  katalon-studio-run:
    docker:
      - image: katalonstudio/katalon:<< pipeline.parameters.kre-image-tag >>
    steps:
      - *setup_slack_mentions
      - checkout
      - run:
          name: Regression Tests
          command: |
            katalonc.sh -apiKey="$KATALON_API_KEY" -browserType="Chrome" \
              -retry=0 -statusDelay=15 -testSuitePath="Test Suites/Regression" \
              -projectPath="./" --config -webui.autoUpdateDrivers=true \
              -testOps.projectId="$TESTOPS_PROJECT_ID" \
              -testOps.serverUrl="$TESTOPS_SERVER_URL"
      - store_artifacts:
          path: Reports
          destination: katalon-reports
      - store_test_results:
          path: Reports
      - *slack_notify

  upload-results:
    docker:
      - image: katalonstudio/katalon:<< pipeline.parameters.kre-image-tag >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Upload Results to TestOps
          command: |
            katalonc.sh -apiKey="$KATALON_API_KEY" \
              -projectPath="./" \
              -executionProfilesDirectory="Profiles" \
              -reportFolder="Reports" \
              -reportFileName="report" \
              -testOpsProjectId="$TESTOPS_PROJECT_ID" \
              -testOpsServerUrl="$TESTOPS_SERVER_URL"
      - run:
          name: Upload Results to GitHub
          command: |
            apt-get update && apt-get install -y git
            git config user.email "circleci@example.com"
            git config user.name "CircleCI"
            git checkout -b test-results-${CIRCLE_BUILD_NUM}
            cp -R Reports/* .
            git add .
            git commit -m "Add test results for build ${CIRCLE_BUILD_NUM}"
            git push https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git test-results-${CIRCLE_BUILD_NUM}
            curl -u ${GITHUB_TOKEN}: -X POST -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls \
              -d '{"title":"Test Results for Build '"${CIRCLE_BUILD_NUM}"'","head":"test-results-'"${CIRCLE_BUILD_NUM}"'","base":"main"}'

workflows:
  build:
    jobs:
      - katalon-studio-run:
          context: org-global
      - upload-results:
          requires:
            - katalon-studio-run